$date
	Thu Sep 19 13:39:55 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb $end
$var wire 1 ! rst $end
$var wire 1 " clk $end
$var wire 4 # c [3:0] $end
$var wire 4 $ b [3:0] $end
$var wire 4 % a [3:0] $end
$var wire 2 & MODO [1:0] $end
$scope module DUT $end
$var wire 1 ! rst $end
$var wire 1 " clk $end
$var wire 4 ' b [3:0] $end
$var wire 4 ( a [3:0] $end
$var wire 2 ) MODO [1:0] $end
$var reg 4 * c [3:0] $end
$var reg 1 + rco $end
$upscope $end
$scope module tester $end
$var wire 4 , c [3:0] $end
$var reg 2 - MODO [1:0] $end
$var reg 4 . a [3:0] $end
$var reg 4 / b [3:0] $end
$var reg 1 " clk $end
$var reg 1 ! rst $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx /
bx .
bx -
bx ,
x+
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
0"
1!
$end
#5
b0 #
b0 *
b0 ,
1"
#10
0"
b1 $
b1 '
b1 /
b1 %
b1 (
b1 .
b1 &
b1 )
b1 -
0!
#15
1"
#20
0"
#25
1"
#30
0"
#35
1"
#40
0"
