$date
	Thu Sep 19 14:25:17 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb $end
$var wire 1 ! rst $end
$var wire 1 " clk $end
$var wire 4 # c [3:0] $end
$var wire 4 $ b [3:0] $end
$var wire 4 % a [3:0] $end
$var wire 2 & MODO [1:0] $end
$scope module DUT $end
$var wire 1 ! rst $end
$var wire 1 " clk $end
$var wire 4 ' b [3:0] $end
$var wire 4 ( a [3:0] $end
$var wire 2 ) MODO [1:0] $end
$var reg 4 * c [3:0] $end
$var reg 1 + rco $end
$upscope $end
$scope module tester $end
$var wire 4 , c [3:0] $end
$var wire 1 - rco $end
$var reg 2 . MODO [1:0] $end
$var reg 4 / a [3:0] $end
$var reg 4 0 b [3:0] $end
$var reg 1 " clk $end
$var reg 1 ! rst $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
bx /
bx .
z-
bx ,
x+
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
0"
1!
$end
#5
0+
b0 #
b0 *
b0 ,
1"
#10
0"
b11 $
b11 '
b11 0
b10 %
b10 (
b10 /
b0 &
b0 )
b0 .
0!
#15
b101 #
b101 *
b101 ,
1"
#20
0"
#25
1"
#30
0"
b1 $
b1 '
b1 0
b1111 %
b1111 (
b1111 /
#35
1+
b0 #
b0 *
b0 ,
1"
#40
0"
#45
1"
#50
0"
b10 $
b10 '
b10 0
b100 %
b100 (
b100 /
b1 &
b1 )
b1 .
#55
0+
b10 #
b10 *
b10 ,
1"
#60
0"
#65
1"
#70
0"
b110 $
b110 '
b110 0
b10 %
b10 (
b10 /
#75
1+
b1100 #
b1100 *
b1100 ,
1"
#80
0"
#85
1"
#90
0"
b10 $
b10 '
b10 0
b10 &
b10 )
b10 .
#95
0+
b100 #
b100 *
b100 ,
1"
#100
0"
#105
1"
#110
0"
b1110 %
b1110 (
b1110 /
#115
1+
b1100 #
b1100 *
b1100 ,
1"
#120
0"
#125
1"
#130
0"
b0 $
b0 '
b0 0
b10 %
b10 (
b10 /
b11 &
b11 )
b11 .
#135
0+
b100 #
b100 *
b100 ,
1"
#140
0"
#145
1"
#150
0"
b1100 %
b1100 (
b1100 /
#155
1+
b1000 #
b1000 *
b1000 ,
1"
#160
0"
#165
1"
#170
0"
