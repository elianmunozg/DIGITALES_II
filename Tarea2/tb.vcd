$date
	Sun Oct 27 13:29:35 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 16 ! MISO [15:0] $end
$var wire 1 " sclk $end
$var wire 16 # counter2 [15:0] $end
$var wire 16 $ counter [15:0] $end
$var wire 16 % MOSI [15:0] $end
$var wire 1 & CS_SLAVE2 $end
$var wire 1 ' CS_SLAVE1 $end
$var reg 1 ( clk $end
$var reg 16 ) datain [15:0] $end
$var reg 1 * reset $end
$scope module SLAVE1 $end
$var wire 1 " sclk $end
$var wire 16 + counter2 [15:0] $end
$var wire 16 , counter [15:0] $end
$var wire 16 - MOSI [15:0] $end
$var wire 1 ' CS_SLAVE1 $end
$var reg 16 . MISO [15:0] $end
$var reg 16 / MISO_SHIFT [15:0] $end
$upscope $end
$scope module SLAVE2 $end
$var wire 1 " sclk $end
$var wire 16 0 counter2 [15:0] $end
$var wire 16 1 counter [15:0] $end
$var wire 16 2 MOSI [15:0] $end
$var wire 1 & CS_SLAVE2 $end
$var reg 16 3 MISO [15:0] $end
$var reg 16 4 MISO_SHIFT [15:0] $end
$upscope $end
$scope module uut $end
$var wire 16 5 MISO [15:0] $end
$var wire 1 ( clk $end
$var wire 16 6 datain [15:0] $end
$var wire 1 * reset $end
$var wire 1 " sclk $end
$var wire 16 7 counter [15:0] $end
$var reg 1 ' CS_SLAVE1 $end
$var reg 1 & CS_SLAVE2 $end
$var reg 16 8 MOSI [15:0] $end
$var reg 5 9 count [4:0] $end
$var reg 16 : counter2 [15:0] $end
$var reg 1 ; spi_sclk $end
$var reg 4 < state [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx <
x;
bx :
bx 9
bx 8
b0xxxxx 7
b0 6
bx 5
bx 4
bx 3
bx 2
b0xxxxx 1
bx 0
bx /
bx .
bx -
b0xxxxx ,
bx +
1*
b0 )
0(
x'
x&
bx %
b0xxxxx $
bx #
x"
bx !
$end
#5
bz /
bz .
bx0 4
0"
0;
1'
b10001 #
b10001 +
b10001 0
b10001 :
b10000 $
b10000 ,
b10000 1
b10000 7
b10000 9
b0 %
b0 -
b0 2
b0 8
1(
#10
0(
0*
#15
b0 <
1(
#20
0(
b1010010101101001 )
b1010010101101001 6
#25
b1 <
1&
1(
#30
0(
#35
b10 <
b1111 $
b1111 ,
b1111 1
b1111 7
b1111 9
b1 %
b1 -
b1 2
b1 8
0'
1"
1;
1(
#40
0(
#45
bz 4
bz !
bz 5
bz 3
bz1 /
b1 <
0"
0;
1(
#50
0(
#55
b10 <
b1110 $
b1110 ,
b1110 1
b1110 7
b1110 9
b0 %
b0 -
b0 2
b0 8
1"
1;
1(
#60
0(
#65
bz10 /
b1 <
0"
0;
1(
#70
0(
#75
b10 <
b1101 $
b1101 ,
b1101 1
b1101 7
b1101 9
b1 %
b1 -
b1 2
b1 8
1"
1;
1(
#80
0(
#85
bz101 /
b1 <
0"
0;
1(
#90
0(
#95
b10 <
b1100 $
b1100 ,
b1100 1
b1100 7
b1100 9
b0 %
b0 -
b0 2
b0 8
1"
1;
1(
#100
0(
#105
bz1010 /
b1 <
0"
0;
1(
#110
0(
#115
b10 <
b1011 $
b1011 ,
b1011 1
b1011 7
b1011 9
1"
1;
1(
#120
0(
#125
bz10100 /
b1 <
0"
0;
1(
#130
0(
#135
b10 <
b1010 $
b1010 ,
b1010 1
b1010 7
b1010 9
b1 %
b1 -
b1 2
b1 8
1"
1;
1(
#140
0(
#145
bz101001 /
b1 <
0"
0;
1(
#150
0(
#155
b10 <
b1001 $
b1001 ,
b1001 1
b1001 7
b1001 9
b0 %
b0 -
b0 2
b0 8
1"
1;
1(
#160
0(
#165
bz1010010 /
b1 <
0"
0;
1(
#170
0(
#175
b10 <
b1000 $
b1000 ,
b1000 1
b1000 7
b1000 9
b1 %
b1 -
b1 2
b1 8
1"
1;
1(
#180
0(
#185
bz10100101 /
b1 <
0"
0;
1(
#190
0(
#195
b10 <
b111 $
b111 ,
b111 1
b111 7
b111 9
b0 %
b0 -
b0 2
b0 8
1"
1;
1(
#200
0(
#205
bz101001010 /
b1 <
0"
0;
1(
#210
0(
#215
b10 <
b110 $
b110 ,
b110 1
b110 7
b110 9
b1 %
b1 -
b1 2
b1 8
1"
1;
1(
#220
0(
#225
bz1010010101 /
b1 <
0"
0;
1(
#230
0(
#235
b10 <
b101 $
b101 ,
b101 1
b101 7
b101 9
1"
1;
1(
#240
0(
#245
bz10100101011 /
b1 <
0"
0;
1(
#250
0(
#255
b10 <
b100 $
b100 ,
b100 1
b100 7
b100 9
b0 %
b0 -
b0 2
b0 8
1"
1;
1(
#260
0(
#265
bz101001010110 /
b1 <
0"
0;
1(
#270
0(
#275
b10 <
b11 $
b11 ,
b11 1
b11 7
b11 9
b1 %
b1 -
b1 2
b1 8
1"
1;
1(
#280
0(
#285
bz1010010101101 /
b1 <
0"
0;
1(
#290
0(
#295
b10 <
b10 $
b10 ,
b10 1
b10 7
b10 9
b0 %
b0 -
b0 2
b0 8
1"
1;
1(
#300
0(
#305
bz10100101011010 /
b1 <
0"
0;
1(
#310
0(
#315
b10 <
b1 $
b1 ,
b1 1
b1 7
b1 9
1"
1;
1(
#320
0(
#325
bz101001010110100 /
b1 <
0"
0;
1(
#330
0(
#335
b10 <
b0 $
b0 ,
b0 1
b0 7
b0 9
b1 %
b1 -
b1 2
b1 8
1"
1;
1(
#340
0(
#345
b1010010101101001 /
0"
0;
b11 <
1(
#350
0(
#355
b10 <
b10000 #
b10000 +
b10000 0
b10000 :
1"
1;
b0 %
b0 -
b0 2
b0 8
1(
#360
0(
#365
b1 !
b1 5
b1 .
0"
0;
b11 <
1(
#370
0(
#375
b10 <
b1111 #
b1111 +
b1111 0
b1111 :
1"
1;
1(
#380
0(
#385
b0 !
b0 5
b0 .
0"
0;
b11 <
1(
#390
0(
#395
b10 <
b1110 #
b1110 +
b1110 0
b1110 :
1"
1;
1(
#400
0(
#405
b1 !
b1 5
b1 .
0"
0;
b11 <
1(
#410
0(
#415
b10 <
b1101 #
b1101 +
b1101 0
b1101 :
1"
1;
1(
#420
0(
#425
b0 !
b0 5
b0 .
0"
0;
b11 <
1(
#430
0(
#435
b10 <
b1100 #
b1100 +
b1100 0
b1100 :
1"
1;
1(
#440
0(
#445
0"
0;
b11 <
1(
#450
0(
#455
b10 <
b1011 #
b1011 +
b1011 0
b1011 :
1"
1;
1(
#460
0(
#465
b1 !
b1 5
b1 .
0"
0;
b11 <
1(
#470
0(
#475
b10 <
b1010 #
b1010 +
b1010 0
b1010 :
1"
1;
1(
#480
0(
#485
b0 !
b0 5
b0 .
0"
0;
b11 <
1(
#490
0(
#495
b10 <
b1001 #
b1001 +
b1001 0
b1001 :
1"
1;
1(
#500
0(
#505
b1 !
b1 5
b1 .
0"
0;
b11 <
1(
#510
0(
#515
b10 <
b1000 #
b1000 +
b1000 0
b1000 :
1"
1;
1(
#520
0(
#525
b0 !
b0 5
b0 .
0"
0;
b11 <
1(
#530
0(
#535
b10 <
b111 #
b111 +
b111 0
b111 :
1"
1;
1(
#540
0(
#545
b1 !
b1 5
b1 .
0"
0;
b11 <
1(
#550
0(
#555
b10 <
b110 #
b110 +
b110 0
b110 :
1"
1;
1(
#560
0(
#565
0"
0;
b11 <
1(
#570
0(
#575
b10 <
b101 #
b101 +
b101 0
b101 :
1"
1;
1(
#580
0(
#585
b0 !
b0 5
b0 .
0"
0;
b11 <
1(
#590
0(
#595
b10 <
b100 #
b100 +
b100 0
b100 :
1"
1;
1(
#600
0(
#605
b1 !
b1 5
b1 .
0"
0;
b11 <
1(
#610
0(
#615
b10 <
b11 #
b11 +
b11 0
b11 :
1"
1;
1(
#620
0(
#625
b0 !
b0 5
b0 .
0"
0;
b11 <
1(
#630
0(
#635
b10 <
b10 #
b10 +
b10 0
b10 :
1"
1;
1(
#640
0(
#645
0"
0;
b11 <
1(
#650
0(
#655
b10 <
b1 #
b1 +
b1 0
b1 :
1"
1;
1(
#660
0(
#665
b1 !
b1 5
b1 .
0"
0;
b11 <
1(
#670
0(
#675
b100 <
b10010 #
b10010 +
b10010 0
b10010 :
b10000 $
b10000 ,
b10000 1
b10000 7
b10000 9
1"
1;
1(
#680
0(
#685
bz0 4
bz /
bz !
bz 5
bz .
b10 <
b10001 #
b10001 +
b10001 0
b10001 :
0&
1'
0"
0;
1(
#690
0(
#695
b101 <
1"
1;
1(
#700
0(
#705
bz01 4
b10 <
b1111 $
b1111 ,
b1111 1
b1111 7
b1111 9
b1 %
b1 -
b1 2
b1 8
0"
0;
1(
#710
0(
#715
b101 <
1"
1;
1(
#720
0(
#725
bz010 4
b10 <
b1110 $
b1110 ,
b1110 1
b1110 7
b1110 9
b0 %
b0 -
b0 2
b0 8
0"
0;
1(
#730
0(
#735
b101 <
1"
1;
1(
#740
0(
#745
bz0101 4
b10 <
b1101 $
b1101 ,
b1101 1
b1101 7
b1101 9
b1 %
b1 -
b1 2
b1 8
0"
0;
1(
#750
0(
#755
b101 <
1"
1;
1(
#760
0(
#765
bz01010 4
b10 <
b1100 $
b1100 ,
b1100 1
b1100 7
b1100 9
b0 %
b0 -
b0 2
b0 8
0"
0;
1(
#770
0(
#775
b101 <
1"
1;
1(
#780
0(
#785
bz010100 4
b10 <
b1011 $
b1011 ,
b1011 1
b1011 7
b1011 9
0"
0;
1(
#790
0(
#795
b101 <
1"
1;
1(
#800
0(
#805
bz0101001 4
b10 <
b1010 $
b1010 ,
b1010 1
b1010 7
b1010 9
b1 %
b1 -
b1 2
b1 8
0"
0;
1(
#810
0(
#815
b101 <
1"
1;
1(
#820
0(
#825
bz01010010 4
b10 <
b1001 $
b1001 ,
b1001 1
b1001 7
b1001 9
b0 %
b0 -
b0 2
b0 8
0"
0;
1(
#830
0(
#835
b101 <
1"
1;
1(
#840
0(
#845
bz010100101 4
b10 <
b1000 $
b1000 ,
b1000 1
b1000 7
b1000 9
b1 %
b1 -
b1 2
b1 8
0"
0;
1(
#850
0(
#855
b101 <
1"
1;
1(
#860
0(
#865
bz0101001010 4
b10 <
b111 $
b111 ,
b111 1
b111 7
b111 9
b0 %
b0 -
b0 2
b0 8
0"
0;
1(
#870
0(
#875
b101 <
1"
1;
1(
#880
0(
#885
bz01010010101 4
b10 <
b110 $
b110 ,
b110 1
b110 7
b110 9
b1 %
b1 -
b1 2
b1 8
0"
0;
1(
#890
0(
#895
b101 <
1"
1;
1(
#900
0(
#905
bz010100101011 4
b10 <
b101 $
b101 ,
b101 1
b101 7
b101 9
0"
0;
1(
#910
0(
#915
b101 <
1"
1;
1(
#920
0(
#925
bz0101001010110 4
b10 <
b100 $
b100 ,
b100 1
b100 7
b100 9
b0 %
b0 -
b0 2
b0 8
0"
0;
1(
#930
0(
#935
b101 <
1"
1;
1(
#940
0(
#945
bz01010010101101 4
b10 <
b11 $
b11 ,
b11 1
b11 7
b11 9
b1 %
b1 -
b1 2
b1 8
0"
0;
1(
#950
0(
#955
b101 <
1"
1;
1(
#960
0(
#965
bz010100101011010 4
b10 <
b10 $
b10 ,
b10 1
b10 7
b10 9
b0 %
b0 -
b0 2
b0 8
0"
0;
1(
#970
0(
#975
b101 <
1"
1;
1(
#980
0(
#985
b101001010110100 4
b10 <
b1 $
b1 ,
b1 1
b1 7
b1 9
0"
0;
1(
#990
0(
#995
b101 <
1"
1;
1(
#1000
0(
#1005
b1010010101101001 4
b10 <
b0 $
b0 ,
b0 1
b0 7
b0 9
b1 %
b1 -
b1 2
b1 8
0"
0;
1(
#1010
0(
#1015
1"
1;
b100 <
1(
#1020
0(
#1025
b1 !
b1 5
b1 3
b10 <
b10000 #
b10000 +
b10000 0
b10000 :
0"
0;
b0 %
b0 -
b0 2
b0 8
1(
#1030
0(
#1035
1"
1;
b100 <
1(
#1040
0(
#1045
b0 !
b0 5
b0 3
b10 <
b1111 #
b1111 +
b1111 0
b1111 :
0"
0;
1(
#1050
0(
#1055
1"
1;
b100 <
1(
#1060
0(
#1065
b1 !
b1 5
b1 3
b10 <
b1110 #
b1110 +
b1110 0
b1110 :
0"
0;
1(
#1070
0(
#1075
1"
1;
b100 <
1(
#1080
0(
#1085
b0 !
b0 5
b0 3
b10 <
b1101 #
b1101 +
b1101 0
b1101 :
0"
0;
1(
#1090
0(
#1095
1"
1;
b100 <
1(
#1100
0(
#1105
b10 <
b1100 #
b1100 +
b1100 0
b1100 :
0"
0;
1(
#1110
0(
#1115
1"
1;
b100 <
1(
#1120
0(
#1125
b1 !
b1 5
b1 3
b10 <
b1011 #
b1011 +
b1011 0
b1011 :
0"
0;
1(
#1130
0(
#1135
1"
1;
b100 <
1(
#1140
0(
#1145
b0 !
b0 5
b0 3
b10 <
b1010 #
b1010 +
b1010 0
b1010 :
0"
0;
1(
#1150
0(
#1155
1"
1;
b100 <
1(
#1160
0(
#1165
b1 !
b1 5
b1 3
b10 <
b1001 #
b1001 +
b1001 0
b1001 :
0"
0;
1(
#1170
0(
#1175
1"
1;
b100 <
1(
#1180
0(
#1185
b0 !
b0 5
b0 3
b10 <
b1000 #
b1000 +
b1000 0
b1000 :
0"
0;
1(
#1190
0(
#1195
1"
1;
b100 <
1(
#1200
0(
#1205
b1 !
b1 5
b1 3
b10 <
b111 #
b111 +
b111 0
b111 :
0"
0;
1(
#1210
0(
#1215
1"
1;
b100 <
1(
#1220
0(
#1225
b10 <
b110 #
b110 +
b110 0
b110 :
0"
0;
1(
#1230
0(
#1235
1"
1;
b100 <
1(
#1240
0(
#1245
b0 !
b0 5
b0 3
b10 <
b101 #
b101 +
b101 0
b101 :
0"
0;
1(
#1250
0(
#1255
1"
1;
b100 <
1(
#1260
0(
#1265
b1 !
b1 5
b1 3
b10 <
b100 #
b100 +
b100 0
b100 :
0"
0;
1(
#1270
0(
#1275
1"
1;
b100 <
1(
#1280
0(
#1285
b0 !
b0 5
b0 3
b10 <
b11 #
b11 +
b11 0
b11 :
0"
0;
1(
#1290
0(
#1295
1"
1;
b100 <
1(
#1300
0(
#1305
b10 <
b10 #
b10 +
b10 0
b10 :
0"
0;
1(
#1310
0(
#1315
1"
1;
b100 <
1(
#1320
0(
#1325
b1 !
b1 5
b1 3
b10 <
b1 #
b1 +
b1 0
b1 :
0"
0;
1(
#1330
0(
#1335
1"
1;
b100 <
1(
#1340
0(
#1345
bz 4
bz !
bz 5
bz 3
b10 <
b0 #
b0 +
b0 0
b0 :
0"
0;
1(
#1350
0(
#1355
1"
1;
b100 <
1(
#1360
0(
#1365
bz0 4
b0 <
b10001 #
b10001 +
b10001 0
b10001 :
b10000 $
b10000 ,
b10000 1
b10000 7
b10000 9
0"
0;
1(
#1370
0(
#1375
b1 <
1&
1(
#1380
0(
#1385
b10 <
b1111 $
b1111 ,
b1111 1
b1111 7
b1111 9
b1 %
b1 -
b1 2
b1 8
0'
1"
1;
1(
#1390
0(
#1395
bz1 /
bz 4
b1 <
0"
0;
1(
#1400
0(
#1405
b10 <
b1110 $
b1110 ,
b1110 1
b1110 7
b1110 9
b0 %
b0 -
b0 2
b0 8
1"
1;
1(
#1410
0(
#1415
bz10 /
b1 <
0"
0;
1(
#1420
0(
#1425
b10 <
b1101 $
b1101 ,
b1101 1
b1101 7
b1101 9
b1 %
b1 -
b1 2
b1 8
1"
1;
1(
#1430
0(
#1435
bz101 /
b1 <
0"
0;
1(
#1440
0(
#1445
b10 <
b1100 $
b1100 ,
b1100 1
b1100 7
b1100 9
b0 %
b0 -
b0 2
b0 8
1"
1;
1(
#1450
0(
#1455
bz1010 /
b1 <
0"
0;
1(
#1460
0(
#1465
b10 <
b1011 $
b1011 ,
b1011 1
b1011 7
b1011 9
1"
1;
1(
#1470
0(
#1475
bz10100 /
b1 <
0"
0;
1(
#1480
0(
#1485
b10 <
b1010 $
b1010 ,
b1010 1
b1010 7
b1010 9
b1 %
b1 -
b1 2
b1 8
1"
1;
1(
#1490
0(
#1495
bz101001 /
b1 <
0"
0;
1(
#1500
0(
#1505
b10 <
b1001 $
b1001 ,
b1001 1
b1001 7
b1001 9
b0 %
b0 -
b0 2
b0 8
1"
1;
1(
#1510
0(
#1515
bz1010010 /
b1 <
0"
0;
1(
#1520
0(
#1525
b10 <
b1000 $
b1000 ,
b1000 1
b1000 7
b1000 9
b1 %
b1 -
b1 2
b1 8
1"
1;
1(
#1530
0(
#1535
bz10100101 /
b1 <
0"
0;
1(
#1540
0(
#1545
b10 <
b111 $
b111 ,
b111 1
b111 7
b111 9
b0 %
b0 -
b0 2
b0 8
1"
1;
1(
#1550
0(
#1555
bz101001010 /
b1 <
0"
0;
1(
#1560
0(
#1565
b10 <
b110 $
b110 ,
b110 1
b110 7
b110 9
b1 %
b1 -
b1 2
b1 8
1"
1;
1(
#1570
0(
#1575
bz1010010101 /
b1 <
0"
0;
1(
#1580
0(
#1585
b10 <
b101 $
b101 ,
b101 1
b101 7
b101 9
1"
1;
1(
#1590
0(
#1595
bz10100101011 /
b1 <
0"
0;
1(
#1600
0(
#1605
b10 <
b100 $
b100 ,
b100 1
b100 7
b100 9
b0 %
b0 -
b0 2
b0 8
1"
1;
1(
#1610
0(
#1615
bz101001010110 /
b1 <
0"
0;
1(
#1620
0(
#1625
b10 <
b11 $
b11 ,
b11 1
b11 7
b11 9
b1 %
b1 -
b1 2
b1 8
1"
1;
1(
#1630
0(
#1635
bz1010010101101 /
b1 <
0"
0;
1(
#1640
0(
#1645
b10 <
b10 $
b10 ,
b10 1
b10 7
b10 9
b0 %
b0 -
b0 2
b0 8
1"
1;
1(
#1650
0(
#1655
bz10100101011010 /
b1 <
0"
0;
1(
#1660
0(
#1665
b10 <
b1 $
b1 ,
b1 1
b1 7
b1 9
1"
1;
1(
#1670
0(
#1675
bz101001010110100 /
b1 <
0"
0;
1(
#1680
0(
#1685
b10 <
b0 $
b0 ,
b0 1
b0 7
b0 9
b1 %
b1 -
b1 2
b1 8
1"
1;
1(
#1690
0(
#1695
b1010010101101001 /
0"
0;
b11 <
1(
#1700
0(
#1705
b10 <
b10000 #
b10000 +
b10000 0
b10000 :
1"
1;
b0 %
b0 -
b0 2
b0 8
1(
#1710
0(
#1715
b1 !
b1 5
b1 .
0"
0;
b11 <
1(
#1720
0(
#1725
b10 <
b1111 #
b1111 +
b1111 0
b1111 :
1"
1;
1(
#1730
0(
#1735
b0 !
b0 5
b0 .
0"
0;
b11 <
1(
#1740
0(
#1745
b10 <
b1110 #
b1110 +
b1110 0
b1110 :
1"
1;
1(
#1750
0(
#1755
b1 !
b1 5
b1 .
0"
0;
b11 <
1(
#1760
0(
#1765
b10 <
b1101 #
b1101 +
b1101 0
b1101 :
1"
1;
1(
#1770
0(
#1775
b0 !
b0 5
b0 .
0"
0;
b11 <
1(
#1780
0(
#1785
b10 <
b1100 #
b1100 +
b1100 0
b1100 :
1"
1;
1(
#1790
0(
#1795
0"
0;
b11 <
1(
#1800
0(
#1805
b10 <
b1011 #
b1011 +
b1011 0
b1011 :
1"
1;
1(
#1810
0(
#1815
b1 !
b1 5
b1 .
0"
0;
b11 <
1(
#1820
0(
#1825
b10 <
b1010 #
b1010 +
b1010 0
b1010 :
1"
1;
1(
#1830
0(
#1835
b0 !
b0 5
b0 .
0"
0;
b11 <
1(
#1840
0(
#1845
b10 <
b1001 #
b1001 +
b1001 0
b1001 :
1"
1;
1(
#1850
0(
#1855
b1 !
b1 5
b1 .
0"
0;
b11 <
1(
#1860
0(
#1865
b10 <
b1000 #
b1000 +
b1000 0
b1000 :
1"
1;
1(
#1870
0(
#1875
b0 !
b0 5
b0 .
0"
0;
b11 <
1(
#1880
0(
#1885
b10 <
b111 #
b111 +
b111 0
b111 :
1"
1;
1(
#1890
0(
#1895
b1 !
b1 5
b1 .
0"
0;
b11 <
1(
#1900
0(
#1905
b10 <
b110 #
b110 +
b110 0
b110 :
1"
1;
1(
#1910
0(
#1915
0"
0;
b11 <
1(
#1920
0(
#1925
b10 <
b101 #
b101 +
b101 0
b101 :
1"
1;
1(
#1930
0(
#1935
b0 !
b0 5
b0 .
0"
0;
b11 <
1(
#1940
0(
#1945
b10 <
b100 #
b100 +
b100 0
b100 :
1"
1;
1(
#1950
0(
#1955
b1 !
b1 5
b1 .
0"
0;
b11 <
1(
#1960
0(
#1965
b10 <
b11 #
b11 +
b11 0
b11 :
1"
1;
1(
#1970
0(
#1975
b0 !
b0 5
b0 .
0"
0;
b11 <
1(
#1980
0(
#1985
b10 <
b10 #
b10 +
b10 0
b10 :
1"
1;
1(
#1990
0(
#1995
0"
0;
b11 <
1(
#2000
0(
#2005
b10 <
b1 #
b1 +
b1 0
b1 :
1"
1;
1(
#2010
0(
#2015
b1 !
b1 5
b1 .
0"
0;
b11 <
1(
#2020
0(
